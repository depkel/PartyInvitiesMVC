@model PartyInvites.Models.GuestResponse

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
        <link href="~/Content/Styles.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet" />
    <title>RsvpForm</title>
   
</head>
<body>
    <br>
    <div class="panel panel-success">
        <div class="panel-heading text-center"><h4>RSVP</h4></div>
        <div class="panel-body">
            @using (Html.BeginForm())
            {
                //the first parameter in TextBoxFor() method is a lambda expression which specifies 'FriendsName' property to bind with the textbox.
                // To create a lambda expression, you specify input parameters (if any) on the left side of the lambda operator =>, and
                //you put the expression or statement block on the other side. For example, the lambda expression x => x * x specifies
                //a parameter that’s named x and returns the value of x squared. You can assign this expression to a delegate type

                //       delegate int del(int i);
                //       static void Main(string[] args)
                //{
                //           del myDelegate = x => x * x;
                //           int j = myDelegate(5); //j = 25
                //       }

                //TextBoxFor helper method is a strongly typed extension method. It generates a text input element for the model property
                //specified using a lambda expression.TextBoxFor method binds a specified model object property to input text.
                //So it automatically displays a value of the model property in a textbox and visa-versa.

                <div class="text-center">
                    @Html.ValidationSummary()
                    <div class="form-group">
                        <label>Your name:</label>
                        @Html.TextBoxFor(x => x.FriendsName)
                    </div>
                    <div class="form-group">
                        <label>Your email:</label> @Html.TextBoxFor(x => x.Email)
                    </div>
                    <div class="form-group">
                        <label>Your phone:</label> @Html.TextBoxFor(x => x.Phone)
                    </div>
                    <div class="form-group">
                        <label>Will you attend?</label>
                        @Html.DropDownListFor(x => x.WillAttend,
          new[] {
                new SelectListItem() {Text = "Yes, I'll be there",Value = bool.TrueString},
                new SelectListItem() {Text = "No, I can't come",Value = bool.FalseString}
                }
                , "Choose an option")
                    </div>
                    <div class="text-center">
                        <input class="btn btn-success" type="submit" value="Submit RSVP" />
                    </div>
                    </div>
                    }
                </div>
    </div>
</body>
</html>
